rename(Date="Date + days(1)")
lowprice = data%>%
group_by(Date)%>%
summarise(PreviousDayLow=min(Low, na.rm = TRUE))%>%
ungroup%>%
mutate(Date+days(1))%>%
select(-"Date")%>%
rename(Date="Date + days(1)")
data=data%>%
left_join(highprice, by="Date")%>%
left_join(lowprice, by="Date")
rm(lowprice,highprice)
#Create new column with current Day open
Open=data%>%
filter(Time==as_hms("08:00:00"))%>%
select(Date,CurrentDayOpen=Open)
data=data%>%
left_join(Open, by="Date")
rm(Open)
data=data%>%
filter(ClosingPrice!="NA")
View(data)
View(data)
data=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))
View(data)
library(tidyverse)
library(dplyr)
library(lubridate)
library(hms)
#create Column names
column_names <- c("Date", "Time", "Open", "High", "Low", "Last", "Volume", "# of Trades",
"OHLC Avg", "HLC Avg", "HL Avg", "Bid Volume", "Ask Volume",
"Point of Control", "Value Area High Value", "Value Area Low Value",
"Volume Weighted Average Price", "Previous Day Close Line",
"Previous Day High Line", "Previous Day Low Line",
"Daily Open at 08:00", "Cash Market Open at 09:00",
"Open", "High", "Low", "Close")
#Import data, delimited by comma
data = read_delim("./F.US.DDU24 [C][M]  30 Min  #4_GraphData.txt", delim = ",", col_names=column_names,skip=1 )
rm(data)
library(tidyverse)
library(dplyr)
library(lubridate)
library(hms)
#create Column names
column_names <- c("Date", "Time", "Open", "High", "Low", "Last", "Volume", "# of Trades",
"OHLC Avg", "HLC Avg", "HL Avg", "Bid Volume", "Ask Volume",
"Point of Control", "Value Area High Value", "Value Area Low Value",
"Volume Weighted Average Price", "Previous Day Close Line",
"Previous Day High Line", "Previous Day Low Line",
"Daily Open at 08:00", "Cash Market Open at 09:00",
"Open", "High", "Low", "Close")
#Import data, delimited by comma
data = read_delim("./F.US.DDU24 [C][M]  30 Min  #4_GraphData.txt", delim = ",", col_names=column_names,skip=1 )
rm(column_names)
#Data wrangling
data=data%>%
mutate(Date=ymd(Date))%>%
mutate(Time = as_hms(Time))%>%
mutate(across(-c(Date,Time), as.numeric))%>%
rename(Open="Open...3", High="High...4", Low="Low...5")
data=data%>%
select(-"Previous Day Close Line",-"Previous Day Low Line",
-"Daily Open at 08:00", -"Cash Market Open at 09:00",-"Open...23",-"High...24",-"Low...25",-"Close",
-"Point of Control", -"Value Area High Value", -"Value Area Low Value",
-"Volume Weighted Average Price", -"Previous Day High Line")
data=data%>%
filter(Date !="2024-08-19")
#Explore data
colnames(data)
glimpse(data)
head(data)
#create new column with previous day close
ClosingPrice = data %>%
filter(Time == as_hms("21:30:00")) %>%
select(Date, ClosingPrice = Last) %>%
mutate(Date=Date+days(1))
data=data%>%
left_join(ClosingPrice, by ="Date")
rm(ClosingPrice)
#create new column with previous day high and low
highprice = data%>%
group_by(Date)%>%
summarise(PreviousDayHigh=max(High, na.rm = TRUE))%>%
ungroup%>%
mutate(Date+days(1))%>%
select(-"Date")%>%
rename(Date="Date + days(1)")
lowprice = data%>%
group_by(Date)%>%
summarise(PreviousDayLow=min(Low, na.rm = TRUE))%>%
ungroup%>%
mutate(Date+days(1))%>%
select(-"Date")%>%
rename(Date="Date + days(1)")
data=data%>%
left_join(highprice, by="Date")%>%
left_join(lowprice, by="Date")
rm(lowprice,highprice)
#Create new column with current Day open
Open=data%>%
filter(Time==as_hms("08:00:00"))%>%
select(Date,CurrentDayOpen=Open)
data=data%>%
left_join(Open, by="Date")
rm(Open)
data=data%>%
filter(ClosingPrice!="NA")
datagap=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))%>%
mutate(IsGapGreaterThan10=GapMagnitude>10)
View(datagap)
datagapr = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min<= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max>0 ClsoingPrice ~ TRUE,
datagapr = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min<= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max>0 ClosingPrice ~ TRUE,
datagapr = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min <= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max >= ClosingPrice ~ TRUE,
TRUE ~ FALSE))%>% ungroup()
datagapr = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min(Low) <= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max(High) >= ClosingPrice ~ TRUE,
TRUE ~ FALSE))%>% ungroup()
View(datagapr)
datagap=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))%>%
mutate(IsGapGreaterThan10=GapMagnitude>10)
#Check if gap has been closed during the day
datagap = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min(Low) <= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max(High) >= ClosingPrice ~ TRUE,
TRUE ~ FALSE))%>% ungroup()
##Summarizing
Gap_Results = datagap %>%
group_by(Date) %>%
summarize(
ClosingPrice=first(ClosingPrice),
CurrentDayOpen = first(CurrentDayOpen),
Gap=first(Gap),
IsGapGreaterThan10=first(IsGapGreaterThan10),
GapClosed=any(GapClosed)
)
print(Gap_Results)
View(Gap_Results)
Gap_Results=Gap_Results%>%
mutate(GapInd=if_else(GapClosed & IsGapGreaterThan10 , 1, 0))
View(Gap_Results)
SumGapClosed=sum(Gap_Results$GapInd)
rm(Gap_Results)
Gap_Results = datagap %>%
group_by(Date) %>%
summarize(
ClosingPrice=first(ClosingPrice),
CurrentDayOpen = first(CurrentDayOpen),
Gap=first(Gap),
IsGapGreaterThan10=first(IsGapGreaterThan10),
GapClosed=any(GapClosed)
)
Gap_Results=Gap_Results%>%
mutate(GapInd=if_else(GapClosed & IsGapGreaterThan10 , 1, 0))%>%
mutate(noGap=if_else(IsGapGreaterThan10,0,1))
View(Gap_Results)
SumGapClosed=sum(Gap_Results$GapInd)
SumNoGap=sum(Gap_Results$noGap)
sum(Gap_Results&noGap)
sum(Gap_Results$noGap)
sum(Gap_Results$noGap,na.rm = TRUE)
201-49
126/152
datagap=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))%>%
mutate(IsGapGreaterThan10=GapMagnitude>20)
#Check if gap has been closed during the day
datagap = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min(Low) <= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max(High) >= ClosingPrice ~ TRUE,
TRUE ~ FALSE))%>% ungroup()
##Summarizing
Gap_Results = datagap %>%
group_by(Date) %>%
summarize(
ClosingPrice=first(ClosingPrice),
CurrentDayOpen = first(CurrentDayOpen),
Gap=first(Gap),
IsGapGreaterThan10=first(IsGapGreaterThan10),
GapClosed=any(GapClosed)
)
Gap_Results=Gap_Results%>%
mutate(GapInd=if_else(GapClosed & IsGapGreaterThan10 , 1, 0))%>%
mutate(noGap=if_else(IsGapGreaterThan10,0,1))
SumGapClosed=sum(Gap_Results$GapInd)
SumNoGap=sum(Gap_Results$noGap)
GapClosedRatio=(201-SumNoGap)/SumGapClosed
SumNoGap=sum(Gap_Results$noGap,na.rm=TRUE)
GapClosedRatio=(201-SumNoGap)/SumGapClosed
SumGapClosed=sum(Gap_Results$GapInd)
SumNoGap=sum(Gap_Results$noGap,na.rm=TRUE)
GapClosedRatio=SumGap/Closed/(201-SumNoGap)
SumGapClosed=sum(Gap_Results$GapInd)
SumNoGap=sum(Gap_Results$noGap,na.rm=TRUE)
GapClosedRatio=SumGapClosed/Closed/(201-SumNoGap)
GapClosedRatio=SumGapClosed/(201-SumNoGap)
library(dplyr)
##Creating a function that outputs statistics for different gaps
analyze_gap_closure <- function(data, gap_type = c("both", "positive", "negative"), gap_size = 10) {
#Creating error output if gap type input is inputted wrong
if(!gap_type %in% c("both", "positive", "negative")){
stop("Invalid gap_type. Choose from 'both', 'positive' or 'negative'")
}
#Filter data based on gap type and size
if (gap_type=="positive"){
filtered_data=data%>%
filter(Gap > gap_size)
} else if (gap_type=="negative"){
filtered_data=data%>%
filter (Gap < -gap_size)
}else {
filtered_data=data%>%
filter(abs(Gap) > gap_size)
}
#Check gap closure
filtered_data<-filtered_data%>%
group_by(Date)%>%
mutate(
Before_1130=any(Time<= "11:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_1430 = any(Time <= "14:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_2130 = any(Time <= "21:30:00" & (High >= ClosingPrice | Low <= ClosingPrice))
) %>%
summarize(
TotalDays = n_distinc(Date),
ClosedBefore1130 =sum(Before_1130, na.rm=TRUE),
ClosedBefore1430 =sum(Before_1430, na.rm=TRUE),
ClosedBefore2130 =sum(Before_2130, na.rm=TRUE)
)
#Create Ratios
results <- filtered_data%>%
summarize(
Type=paste(gap_type,gap_size,sep="_"),
TotalDays = sum(TotalDays),
RatioBefore1130=ClosedBefore1130/TotalDays,
RatioBefore1430=ClosedBefore1430/TotalDays,
RatioBefore2130=ClosedBefore2130/TotalDays
)
}
analyze_gap_closure(datagap,"both",10)
library(dplyr)
##Creating a function that outputs statistics for different gaps
analyze_gap_closure <- function(data, gap_type = c("both", "positive", "negative"), gap_size = 10) {
#Creating error output if gap type input is inputted wrong
if(!gap_type %in% c("both", "positive", "negative")){
stop("Invalid gap_type. Choose from 'both', 'positive' or 'negative'")
}
#Filter data based on gap type and size
if (gap_type=="positive"){
filtered_data=data%>%
filter(Gap > gap_size)
} else if (gap_type=="negative"){
filtered_data=data%>%
filter (Gap < -gap_size)
}else {
filtered_data=data%>%
filter(abs(Gap) > gap_size)
}
#Check gap closure
filtered_data<-filtered_data%>%
group_by(Date)%>%
mutate(
Before_1130=any(Time<= "11:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_1430 = any(Time <= "14:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_2130 = any(Time <= "21:30:00" & (High >= ClosingPrice | Low <= ClosingPrice))
) %>%
summarize(
TotalDays = n_distinct(Date),
ClosedBefore1130 =sum(Before_1130, na.rm=TRUE),
ClosedBefore1430 =sum(Before_1430, na.rm=TRUE),
ClosedBefore2130 =sum(Before_2130, na.rm=TRUE)
)
#Create Ratios
results <- filtered_data%>%
summarize(
Type=paste(gap_type,gap_size,sep="_"),
TotalDays = sum(TotalDays),
RatioBefore1130=ClosedBefore1130/TotalDays,
RatioBefore1430=ClosedBefore1430/TotalDays,
RatioBefore2130=ClosedBefore2130/TotalDays
)
}
analyze_gap_closure(datagap,"both",10)
rm(datagapr)
library(dplyr)
##Creating a function that outputs statistics for different gaps
analyze_gap_closure <- function(data, gap_type = c("both", "positive", "negative"), gap_size = 10) {
#Creating error output if gap type input is inputted wrong
if(!gap_type %in% c("both", "positive", "negative")){
stop("Invalid gap_type. Choose from 'both', 'positive' or 'negative'")
}
#Filter data based on gap type and size
if (gap_type=="positive"){
filtered_data=data%>%
filter(Gap > gap_size)
} else if (gap_type=="negative"){
filtered_data=data%>%
filter (Gap < -gap_size)
}else {
filtered_data=data%>%
filter(abs(Gap) > gap_size)
}
#Check gap closure
gap_closure_data<-filtered_data%>%
group_by(Date)%>%
mutate(
Before_1130=any(Time<= "11:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_1430 = any(Time <= "14:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_2130 = any(Time <= "21:30:00" & (High >= ClosingPrice | Low <= ClosingPrice))
) %>%
reframe(
TotalDays = n_distinct(Date),
ClosedBefore1130 =sum(Before_1130, na.rm=TRUE),
ClosedBefore1430 =sum(Before_1430, na.rm=TRUE),
ClosedBefore2130 =sum(Before_2130, na.rm=TRUE)
)
#Create Ratios
results <- gap_closure_data%>%
reframe(
Type=paste(gap_type,gap_size,sep="_"),
TotalDays = sum(TotalDays),
RatioBefore1130=ClosedBefore1130/TotalDays,
RatioBefore1430=ClosedBefore1430/TotalDays,
RatioBefore2130=ClosedBefore2130/TotalDays
)
}
analyze_gap_closure(datagap,"both",10)
analyze_gap_closure(datagap,"both",10)
analyze_gap_closure(datagap,"both",10)
View(Gap_Results)
a=analyze_gap_closure(datagap,"both",10)
View(a)
gap_size=20
filtered_data=data%>%
filter(Gap > gap_size)
View(datagap)
filtered_data=datagap%>%
filter(Gap > gap_size)
View(filtered_data)
rm(a)
a=analyze_gap_closure(datagap,"both",10)
View(a)
a=analyze_gap_closure(datagap,"negative",10)
View(a)
View(datagap)
datagap=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))%>%
mutate(IsGapGreaterThan10=GapMagnitude>10)
View(datagap)
View(datagap)
filtered_data=datagap%>%
filter (Gap >gap_size)
View(filtered_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)
View(filtered_data)
2640/40
datagap=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))%>%
mutate(IsGapGreaterThan10=GapMagnitude>20)
#Check if gap has been closed during the day
datagap = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min(Low) <= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max(High) >= ClosingPrice ~ TRUE,
TRUE ~ FALSE))%>% ungroup()
View(datagap)
Gap_Results = datagap %>%
group_by(Date) %>%
summarize(
ClosingPrice=first(ClosingPrice),
CurrentDayOpen = first(CurrentDayOpen),
Gap=first(Gap),
IsGapGreaterThan10=first(IsGapGreaterThan10),
GapClosed=any(GapClosed)
)
filtered_data=datagap%>%
filter (Gap >=gap_size)
gap_closure_data<-filtered_data%>%
group_by(Date)%>%
mutate(
Before_1130=any(Time<= "11:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_1430 = any(Time <= "14:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_2130 = any(Time <= "21:30:00" & (High >= ClosingPrice | Low <= ClosingPrice))
)
View(filtered_data)
View(gap_closure_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time<"08:00:00")
View(filtered_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time<as_hms"08:00:00")
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time<as_hms("08:00:00"))
View(filtered_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))
gap_closure_data<-filtered_data%>%
group_by(Date)%>%
mutate(
Before_1130=any(Time<= "11:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_1430 = any(Time <= "14:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_2130 = any(Time <= "21:30:00" & (High >= ClosingPrice | Low <= ClosingPrice))
)
View(gap_closure_data)
datagap=data%>%
mutate(Gap= CurrentDayOpen-ClosingPrice,
GapMagnitude=abs(Gap))%>%
mutate(IsGapGreaterThan10=GapMagnitude>20)
datagap = datagap%>%
group_by(Date) %>%
group_by(Date)%>%
mutate(GapClosed=case_when(IsGapGreaterThan10 & Gap >0 &min(Low) <= ClosingPrice ~ TRUE,
IsGapGreaterThan10 & Gap <0 &max(High) >= ClosingPrice ~ TRUE,
TRUE ~ FALSE))%>% ungroup()
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))
gap_closure_data<-filtered_data%>%
group_by(Date)%>%
mutate(
Before_1130=any(Time<= "11:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_1430 = any(Time <= "14:30:00" & (High >= ClosingPrice | Low <= ClosingPrice)),
Before_2130 = any(Time <= "21:30:00" & (High >= ClosingPrice | Low <= ClosingPrice))
)
View(gap_closure_data)
View(filtered_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))%>%
mutate(Before_1130 = if_else(Time <= as_hms("11:30:00") & Low< CurrentDayOpen, 1, 0),
Before_1430 = if_else(Time <= as_hms("14:30:00") & Low< CurrentDayOpen, 1, 0),
Before_2130 = if_else(Time <= as_hms("21:30:00") & Low< CurrentDayOpen, 1, 0))
View(filtered_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
group_by(Date)%>%
filter(Time>=as_hms("08:00:00"))%>%
mutate(Before_1130 = if_else(Time <= as_hms("11:30:00") & Low< CurrentDayOpen, 1, 0),
Before_1430 = if_else(Time <= as_hms("14:30:00") & Low< CurrentDayOpen, 1, 0),
Before_2130 = if_else(Time <= as_hms("21:30:00") & Low< CurrentDayOpen, 1, 0))
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
group_by(Date)%>%
filter(Time>=as_hms("08:00:00"))%>%
mutate(Before_1130 = if_else(Time <= as_hms("11:30:00") & Low< CurrentDayOpen, 1, 0),
Before_1430 = if_else(Time <= as_hms("14:30:00") & Low< CurrentDayOpen, 1, 0),
Before_2130 = if_else(Time <= as_hms("21:30:00") & Low< CurrentDayOpen, 1, 0))
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))%>%
group_by(Date)%>%
mutate(Before_1130 = if_else(Time <= as_hms("11:30:00") & Low< CurrentDayOpen, 1, 0),
Before_1430 = if_else(Time <= as_hms("14:30:00") & Low< CurrentDayOpen, 1, 0),
Before_2130 = if_else(Time <= as_hms("21:30:00") & Low< CurrentDayOpen, 1, 0))
View(filtered_data)
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))%>%
group_by(Date)%>%
mutate(Before_1130 = if_else(Time <= as_hms("11:30:00") & Low< ClosingPrice, 1, 0),
Before_1430 = if_else(Time <= as_hms("14:30:00") & Low< ClosingPrice, 1, 0),
Before_2130 = if_else(Time <= as_hms("21:30:00") & Low< ClosingPrice, 1, 0))
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))%>%
mutate(c1130 = if_else(Time <= as_hms("11:30:00") & Low< ClosingPrice, 1, 0),
c1430 = if_else(Time <= as_hms("14:30:00") & Low< ClosingPrice, 1, 0),
c2130 = if_else(Time <= as_hms("21:30:00") & Low< ClosingPrice, 1, 0))%>%
group_by(Date)%>%
mutate(Before_1130=if_else(any(c1130==1,1,0)),
Before_1430=if_else(any(c1430==1,1,0)),
Before_2130=if_else(any(c2130==1,1,0)))%>%
ungroup()
filtered_data=datagap%>%
filter (Gap >=gap_size)%>%
filter(Time>=as_hms("08:00:00"))%>%
mutate(c1130 = if_else(Time <= as_hms("11:30:00") & Low< ClosingPrice, 1, 0),
c1430 = if_else(Time <= as_hms("14:30:00") & Low< ClosingPrice, 1, 0),
c2130 = if_else(Time <= as_hms("21:30:00") & Low< ClosingPrice, 1, 0))
